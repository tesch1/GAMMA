###############################################################################
#                                                                             #
#                                 G A M M A                                   #
#                                                                             #
#                Makefile for the GAMMA MR Simulation Project                 #
#                      Copyright © 2000 Scott A. Smith                        #
#                  National High Magnetic Field Laboratory                    #
#                         1800 E. Paul Dirac Drive                            #
#                     Tallahassee, FL, USA 32306-4005                         #
#                          ssmith@magnet.fsu.edu                              #
#                      On WWW See gamma.magnet.fsu.edu                        #
#                                                                             #
# =========================================================================== #
#                                                                             #
#                                 Quick Info                                  #
#                                                                             #
# 1.) Sets Up GAMMA Module Specific Variables. Included in Main Makefile.     #
# 2.) Needs No Other Variables Externally Set.                                #
# 3.) Any GAMMA Source Additons Must Be Included Herein.                      #
#                                                                             #
# =========================================================================== #
#                                                                             #
# The concern of this Makefile are the definitions used for specific GAMMA    #
# modules. A complete set of variables that uniquely define each desired      #
# module should be set herein. This allows the modules definititons to be     #
# accessible to both the main GAMMA makefile as well as individual module     #
# makefiles.                                                                  #
#                                                                             #
# Users are free to copy this file for personal use but may NOT give out      #
# modifications with or without the GAMMA platform.  This and other makefiles #
# are typically packaged with the full GAMMA source distribution.  The full   #
# src distrubution may be obtained from the GAMMA WWW site above or any of    #
# its mirrors.                                                                #
#                                                                             #
###############################################################################

###############################################################################
#                                                                             #
#                         GAMMA BASICS MODULE VARIABLES                       #
#                                                                             #
###############################################################################

BASICS      = Basics
BASICSUL    = ------
BASICSBASE  = Gutils Gconstants StringCut SinglePar ParamSet IsotopeData Isotope
BASICSHDR   = GBasicsIF.h
BASICSPY    = PyBasicsIF.h

BASICS_OBJ = ${BINDIR}\Gconstants.obj  ${BINDIR}\Gutils.obj   \
             ${BINDIR}\StringCut.obj                          \
             ${BINDIR}\SinglePar.obj   ${BINDIR}\ParamSet.obj \
             ${BINDIR}\IsotopeData.obj ${BINDIR}\Isotope.obj

BASICS_A    = $(BASICS_OBJ:.obj=.a)

###############################################################################
#                                                                             #
#                          GAMMA MATRIX MODULE VARIABLES                      #
#                                                                             #
###############################################################################

MATRIX      = Matrix
MATRIXUL    = ------
MATRIXBASE  = complex MxModBas _matrix i_matrix d_matrix h_matrix n_matrix\
              matrix col_vector row_vector py_matrix pyy_matrix
MATRIXHDR   = matrixIF.h
MATRIXPY    = PyMatrix.h

MATRIX_OBJ  = ${BINDIR}\complex.obj    ${BINDIR}\MxModBas.obj  ${BINDIR}\_matrix.obj    \
              ${BINDIR}\i_matrix.obj   ${BINDIR}\d_matrix.obj  ${BINDIR}\h_matrix.obj   \
              ${BINDIR}\n_matrix.obj   ${BINDIR}\matrix.obj    ${BINDIR}\col_vector.obj \
              ${BINDIR}\row_vector.obj ${BINDIR}\py_matrix.obj ${BINDIR}\pyy_matrix.obj

MATRIX_A    = $(MATRIX_OBJ:.obj=.a)

###############################################################################
#                                                                             #
#                      GAMMA HILBERT SPACE MODULE VARIABLES                   #
#                                                                             #
###############################################################################

HSPACE      = HSLib
HSPACEUL    = -----
HSPACEBASE  = SpinOpSng SpinSys SpinOp SpinOpCmp SpinOpRot\
              Basis GenOpRep GenOp SpinSystem\
              HSacquire HSdetect HSdecomp HSprop HSham HSanalyze\
              HSauxil PulseI PulseS PulseShp
HSPACEHDR   = HSLibIF.h
HSPACEPY    = PyHSLib.h

HSPACE_OBJ  = ${BINDIR}\SpinOpSng.obj  ${BINDIR}\SpinSys.obj   ${BINDIR}\SpinOp.obj    ${BINDIR}\SpinOpCmp.obj \
              ${BINDIR}\SpinOpRot.obj  ${BINDIR}\Basis.obj     ${BINDIR}\GenOpRep.obj  ${BINDIR}\GenOp.obj     \
              ${BINDIR}\SpinSystem.obj ${BINDIR}\HSacquire.obj ${BINDIR}\HSdetect.obj  ${BINDIR}\HSdecomp.obj  \
              ${BINDIR}\HSprop.obj     ${BINDIR}\HSham.obj     ${BINDIR}\HSanalyze.obj ${BINDIR}\HSauxil.obj   \
              ${BINDIR}\PulseI.obj     ${BINDIR}\PulseS.obj    ${BINDIR}\PulseShp.obj

HSPACE_A    = $(HSPACE_OBJ:.obj=.a)

###############################################################################
#                                                                             #
#                          GAMMA LEVEL 1 MODULE VARIABLES                     #
#                                                                             #
###############################################################################

LEVEL1      = Level1
LEVEL1UL    = ------
LEVEL1BASE  = coord coord_vec SphHarmic Wigner SpinT SpaceT nmr_tensor\
              Exponential Lorentzian WindowFct ExProcessM
LEVEL1HDR   = Level1IF.h
LEVEL1PY    = PyLevel1.h

LEVEL1_OBJ  = ${BINDIR}\coord.obj      ${BINDIR}\coord_vec.obj ${BINDIR}\SphHarmic.obj  ${BINDIR}\Wigner.obj      \
              ${BINDIR}\SpinT.obj      ${BINDIR}\SpaceT.obj    ${BINDIR}\nmr_tensor.obj ${BINDIR}\Exponential.obj \
              ${BINDIR}\Lorentzian.obj ${BINDIR}\WindowFct.obj ${BINDIR}\ExProcessM.obj

LEVEL1_A    = $(LEVEL1_OBJ:.obj=.a)

###############################################################################
#                                                                             #
#                     GAMMA LIOUVILLE SPACE MODULE VARIABLES                  #
#                                                                             #
###############################################################################

LSPACE      = LSLib
LSPACEUL    = -----
LSPACEBASE  = SuperOp LSacquire LSprop sys_dynamic DensOp LSanalyze LSAux
LSPACEHDR   = LSLibIF.h
LSPACEPY    = PyLSLib.h

LSPACE_OBJ  = ${BINDIR}\SuperOp.obj     ${BINDIR}\LSacquire.obj ${BINDIR}\LSprop.obj    \
              ${BINDIR}\sys_dynamic.obj ${BINDIR}\DensOp.obj    ${BINDIR}\LSanalyze.obj \
              ${BINDIR}\LSAux.obj

LSPACE_A    = $(LSPACE_OBJ:.obj=.a)

###############################################################################
#                                                                             #
#                          GAMMA LEVEL 2 MODULE VARIABLES                     #
#                                                                             #
###############################################################################

LEVEL2      = Level2
LEVEL2UL    = ------
LEVEL2BASE  = TrnsTable1D acquire1D Quaternion EAngles MutExch \
              RelaxBas BaseDecomp
LEVEL2HDR   = Level2IF.h
LEVEL2PY    = PyLevel2.h

LEVEL2_OBJ  = ${BINDIR}\TrnsTable1D.obj ${BINDIR}\acquire1D.obj \
              ${BINDIR}\Quaternion.obj  ${BINDIR}\EAngles.obj   \
              ${BINDIR}\MutExch.obj     ${BINDIR}\RelaxBas.obj  \
              ${BINDIR}\BaseDecomp.obj

LEVEL2_A    = $(LEVEL2_OBJ:.obj=.a)

###############################################################################
#                                                                             #
#                           GAMMA BLOCH MODULE VARIABLES                      #
#                                                                             #
###############################################################################

BLOCH       = Bloch
BLOCHUL     = -----
BLOCHBASE   = MagVec DetVec BlochSys BlochAcq BlochB BlochR BlochK BlochTraj \
              BlochM BlochMx Bloch
BLOCHHDR    = BlochIF.h
BLOCHPY     = PyBloch.h

###############################################################################
#                                                                             #
#                        GAMMA INPUT/OUTPUT MODULE VARIABLES                  #
#                                                                             #
###############################################################################

GAMIO       = GamIO
GAMIOUL     = -----
GAMIOBASE   = BinIOBase Gascii GgnuplotC Ggnuplot1D GgnuplotSph Ggnuplot \
              ML4DElem ML4Tag ML5Hdr ML5Tag ML5SubE ML5AF ML5DA ML5AN \
              ML5Reals ML5Imags ML5DElem MatLabFile \
              FrameMaker FrameMakerC FrameMakerM FrameMakerP FrameMakerS FrameMakerSph\
              XWinPSet XWinAcqPar XWinAcqus XWinFid XWinProcPar XWinProcs \
              XWinSpec XWinMeta XWinOutd XWin1D XWinAcqu2s XWinSer \
              XWinProc2s XWin2D
#              XWinProc2s XWin2D \
#              FTNMR Felix
#NMRiFile

GAMIOHDR    = GammaIOIF.h
GAMIOPY     = PyGamIO.h
ALLFILES   += $(GAMIOBASE)
ALLCCFILES += $(addsuffix .cc, $(addprefix $(GAMIO)/, $(GAMIOBASE)))
ALLHFILES  += $(addsuffix .h,  $(addprefix $(GAMIO)/, $(GAMIOBASE)))
ALLHFILES  += $(addsuffix .h,  $(addprefix $(GAMIO)/, $(GAMIOPY))) 
ALLOFILES  += $(addsuffix .o,  $(addprefix $(GAMIO)/, $(GAMIOBASE)))
ALLMODDIRS += $(GAMIO)
ALLMODHDRS += $(GAMIOHDR)
ALLPYFILES += $(GAMIOPY) 

###############################################################################
#                                                                             #
#                     GAMMA BWR RELAXATION MODULE VARIABLES                   #
#                                                                             #
###############################################################################

WBR         = WBR
WBRUL       = ---
WBRBASE     = relaxCSA  relaxDCSA relaxDip relaxExch relaxJ relaxQCSA \
              relaxQuad relaxRand relaxNMR  relaxProp relaxRF relaxWBRexch \
              relaxanalyze relaxAux
WBRHDR      = relaxWBRIF.h
WBRPY       = PyBWR.h
ALLFILES   += $(WBRBASE)
ALLCCFILES += $(addsuffix .cc, $(addprefix $(WBR)/, $(WBRBASE)))
ALLHFILES  += $(addsuffix .h,  $(addprefix $(WBR)/, $(WBRBASE)))
ALLHFILES  += $(addsuffix .h,  $(addprefix $(WBR)/, $(WBRPY))) 
ALLOFILES  += $(addsuffix .o,  $(addprefix $(WBR)/, $(WBRBASE)))
ALLMODDIRS += $(WBR)
ALLMODHDRS += $(WBRHDR)
ALLPYFILES += $(WBRPY) 

###############################################################################
#                                                                             #
#                           GAMMA PULSE MODULE VARIABLES                      #
#                                                                             #
###############################################################################

PULSE       = Pulses
PULSEUL     = ------
PULSEBASE   = PulGauss PulSinc PulAuxil Pulse PulComposite PulCycle \
              PulDANTE PulGARP PulMLEV PulWALTZ PulCHIRP \
              PulWaveform PulSupCycle PulTrain PulTrainSCyc
PULSEHDR    = PulsesIF.h
PULSEPY     = PyPulses.h 
ALLFILES   += $(PULSEBASE)
ALLCCFILES += $(addsuffix .cc, $(addprefix $(PULSE)/, $(PULSEBASE)))
ALLHFILES  += $(addsuffix .h,  $(addprefix $(PULSE)/, $(PULSEBASE)))
ALLHFILES  += $(addsuffix .h,  $(addprefix $(PULSE)/, $(PULSEPY)))
ALLOFILES  += $(addsuffix .o,  $(addprefix $(PULSE)/, $(PULSEBASE)))
ALLMODDIRS += $(PULSE)
ALLMODHDRS += $(PULSEHDR)
ALLPYFILES += $(PULSEPY) 

###############################################################################
#                                                                             #
#                     GAMMA RANK 2 INTERACTIONS MODULE VARIABLES              #
#                                                                             #
###############################################################################

IRANK2      = IntRank2
IRANK2UL    = --------
IRANK2BASE  = IntRank2ACmp IntRank2A IntRank2T IntRank2 IntCSA IntDip IntQuad IntG IntHF \
              IntDipVec IntCSAVec IntQuadVec IntGVec IntHFVec CompRot SolidSys CartMx2A \
              FrameMap HDipolar HQuadrup HShiftAnis HElectronG
IRANK2HDR   = IntRank2IF.h
IRANK2PY    = PyIntRank2.h
ALLFILES   += $(IRANK2BASE)
ALLCCFILES += $(addsuffix .cc, $(addprefix $(IRANK2)/, $(IRANK2BASE)))
ALLHFILES  += $(addsuffix .h,  $(addprefix $(IRANK2)/, $(IRANK2BASE)))
ALLHFILES  += $(addsuffix .h,  $(addprefix $(IRANK2)/, $(IRANK2PY))) 
ALLOFILES  += $(addsuffix .o,  $(addprefix $(IRANK2)/, $(IRANK2BASE)))
ALLMODDIRS += $(IRANK2)
ALLMODHDRS += $(IRANK2HDR)
ALLMODHDRS += $(PULSEHDR)
ALLPYFILES += $(IRANK2PY) 

###############################################################################
#                                                                             #
#                         GAMMA FLOQUET MODULE VARIABLES                      #
#                                                                             #
###############################################################################

FLOQ        = Floquet
FLOQUL      = -------
FLOQBASE    = FloqOp Floq2Op FloqAcq
FLOQHDR     = FloquetIF.h
FLOQPY      = PyFloquet.h
ALLFILES   += $(FLOQBASE)
ALLCCFILES += $(addsuffix .cc, $(addprefix $(FLOQ)/, $(FLOQBASE)))
ALLHFILES  += $(addsuffix .h,  $(addprefix $(FLOQ)/, $(FLOQBASE)))
ALLHFILES  += $(addsuffix .h,  $(addprefix $(FLOQ)/, $(FLOQPY)))
ALLOFILES  += $(addsuffix .o,  $(addprefix $(FLOQ)/, $(FLOQBASE)))
ALLMODDIRS += $(FLOQ)
ALLMODHDRS += $(FLOQHDR)
ALLPYFILES += $(FLOQPY) 
 
###############################################################################
#                                                                             #
#                      GAMMA FIELD GRADIENTS MODULE VARIABLES                 #
#                                                                             #
###############################################################################

FGRAD       = Gradients
FGRADUL     = ---------
FGRADBASE   = sys_gradz Gradients2 GrdPulses GrdEvolve GrdAcquire GrdDeprec
FGRADHDR    = GradIF.h
FGPY        = PyGradients.h
ALLFILES   += $(FGRADBASE)
ALLCCFILES += $(addsuffix .cc, $(addprefix $(FGRAD)/, $(FGRADBASE)))
ALLHFILES  += $(addsuffix .h,  $(addprefix $(FGRAD)/, $(FGRADBASE)))
ALLHFILES  += $(addsuffix .h,  $(addprefix $(FGRAD)/, $(FGPY))) 
ALLOFILES  += $(addsuffix .o,  $(addprefix $(FGRAD)/, $(FGRADBASE)))
ALLMODDIRS += $(FGRAD)
ALLMODHDRS += $(FGRADHDR)
ALLPYFILES += $(FGPY) 

###############################################################################
#                                                                             #
#                      GAMMA MULTIPLE SYSTEM MODULE VARIABLES                 #
#                                                                             #
###############################################################################

MULTISYS      = MultiSys
MULTISYSUL    = --------
MULTISYSBASE  = SpinMap ExProcess MultiSys MultiLib \
                MultiSOp MultiHam MultiIPul MultiHSLib MultiLOp MultiWBR MultiExch
MULTISYSHDR   = MultiSysIF.h
MULTISYSPY    = PyMultiSys.h
ALLFILES     += $(MULTISYSBASE)
ALLCCFILES   += $(addsuffix .cc, $(addprefix $(MULTISYS)/, $(MULTISYSBASE)))
ALLHFILES    += $(addsuffix .h,  $(addprefix $(MULTISYS)/, $(MULTISYSBASE)))
ALLHFILES    += $(addsuffix .h,  $(addprefix $(MULTISYS)/, $(MULTISYSPY)))
ALLOFILES    += $(addsuffix .o,  $(addprefix $(MULTISYS)/, $(MULTISYSBASE)))
ALLMODDIRS   += $(MULTISYS)
ALLMODHDRS   += $(MULTISYSHDR)
ALLPYFILES   += $(MULTISYSPY)

###############################################################################
#                                                                             #
#                            GAMMA ESR MODULE VARIABLES                       #
#                                                                             #
###############################################################################

ESR         = ESRLib
ESRUL       = ------
ESRBASE     = CubicIonData CubicIon
# CubicSys ESRHam AngleSet Fibre
ESRHDR      = ESRIF.h
ESRPY       = PyESRLib.h
ALLFILES   += $(ESRBASE)
ALLCCFILES += $(addsuffix .cc, $(addprefix $(ESR)/, $(ESRBASE)))
ALLHFILES  += $(addsuffix .h,  $(addprefix $(ESR)/, $(ESRBASE)))
ALLHFILES  += $(addsuffix .h,  $(addprefix $(ESR)/, $(ESRPY))) 
ALLOFILES  += $(addsuffix .o,  $(addprefix $(ESR)/, $(ESRBASE)))
ALLMODDIRS += $(ESR)
ALLMODHDRS += $(ESRHDR)
ALLPYFILES += $(ESRPY)

###############################################################################
#                                                                             #
#                         GAMMA DEPRECATED MODULE VARIABLES                   #
#                                                                             #
###############################################################################

DEPREC      = Deprecated
DEPRECUL    = ----------
DEPRECBASE  = block_1D block_2D acquire
DEPRECHDR   = DeprecIF.h
ALLFILES   += $(DEPRECBASE)
ALLCCFILES += $(addsuffix .cc, $(addprefix $(DEPREC)/, $(DEPRECBASE)))
ALLHFILES  += $(addsuffix .h,  $(addprefix $(DEPREC)/, $(DEPRECBASE))) 
ALLOFILES  += $(addsuffix .o,  $(addprefix $(DEPREC)/, $(DEPRECBASE)))
ALLMODDIRS += $(DEPREC)
ALLMODHDRS += $(DEPRECHDR)

#molecule

###############################################################################
#                                                                             #
#                         GAMMA TESTING MODULE VARIABLES                      #
#                                                                             #
###############################################################################

GTEST       = Testing
GTESTUL     = -------
GTESTBASE   = ConstTest SingleTest SectTest ClassTest ModTest GamTest
GTESTHDR    = TestingIF.h
GTESTPY     = PyTesting.h
ALLFILES   += $(GTESTBASE)
ALLCCFILES += $(addsuffix .cc, $(addprefix $(GTEST)/, $(GTESTBASE)))
ALLHFILES  += $(addsuffix .h,  $(addprefix $(GTEST)/, $(GTESTBASE)))
ALLHFILES  += $(addsuffix .h,  $(addprefix $(GTEST)/, $(GTESTPY))) 
ALLOFILES  += $(addsuffix .o,  $(addprefix $(GTEST)/, $(GTESTBASE)))
ALLMODDIRS += $(GTEST)
ALLMODHDRS += $(GTESTHDR)
ALLPYFILES += $(GTESTPY)

###############################################################################
#                                                                             #
#                      GAMMA WWW INTERFACE MODULE VARIABLES                   #
#                                                                             #
###############################################################################

WEBCGI     = WebCGI
WEBCGIUL   = ------
WEBCGIBASE = WWWGpage WWWcgi WWWclasses WWWplots WWWspsys WWWutils
WEBCGIHDR  = WWWIF.h



