###############################################################################
#                                                                             #
#                                 G A M M A                                   #
#               Makefile For The GAMMA MR Simulation Platform                 #
#                     Copyright (C) 1999 Scott A. Smith                       #
#                  National High Magnetic Field Laboratory                    #
#                         1800 E. Paul Dirac Drive                            #
#                     Tallahassee, FL, USA 32306-4005                         #
#                          ssmith@magnet.fsu.edu                              #
#                      On WWW See gamma.magnet.fsu.edu                        #
#                                                                             #
# The concern of this Makefile is GAMMA source module makefile testing. It    #
# is quite simple. There exists a single target, variables, that can be run   #
# in order to have an individual source module Makefile tell what variables   #
# are currently set. This is quite useful for those (like me) who are often   #
# modifying the GAMMA makefiles.                                              #
#                                                                             #
# Since the source module Makefiles can be called recursively from the main   #
# GAMMA makefile or directly, their behavior will vary accordingly. That is,  #
# if called directly all the variables will be output. If called recursively, #
# only the variables that change from module to module will be shown.         #
#                                                                             #
# Users are free to copy this file for personal use but may NOT give out      #
# modifications with or without the GAMMA platform.  This and other makefiles #
# are typically packaged with GAMMA distributions.                            #
#                                                                             #
# Supplied Targets                                                            #
# ================                                                            #
#                                                                             #
# showvars:   Display all of the relevant Makefile variables                  #
# variables  - Print out the variables used in this module's Makefile         #
# gnuvars    - Output just the boilerplate GNU variables (set in configure)   #
# compvars   - Output just the compiler related variables                     #
# gcntrlvars - Output the GAMMA version control variables                     #
# dirvars    - Output the GAMMA directory variables                           #
# pkgvars    - Output the GAMMA package variables                             #
# srcfiles   - Output a list of module source (.cc) files                     #
# hdrfiles   - Output a list of module header (.h) files                      #
# objfiles   - Output a list of module object files                           #
#                                                                             #
# Requirements                                                                #
# ============                                                                #
# NPD:           No print directory directive.                                #
# MODLABEL:      Cosmetic label for the source module.                        #
# MODULEDIR:     Directory name of the source module.                         #
# MODDISTFILES:  All files that will be distributed with the module.          #
# MODSRCFILES:   Source files that will be distributed with the module.       #
# MODHDRFILES:   Header files that will be distributed with the module.       #
# force:         Required target for use of this makefile                     #
#                                                                             #
#                                                                             #
###############################################################################

###############################################################################
#                                                                             #
#                            Target: variables                                #
#                                                                             #
# This target just spits out all of the important variable names used in this #
# makefile as well as the makefiles which are recursively called.             #
#                                                                             #
###############################################################################

showvars:
        ifeq (0,${MAKELEVEL})
	  @${MAKE} ${NPD} variables
        else
	  @${MAKE} ${NPD} shortvars
	  @echo "crap2"
        endif

variables:
	@echo
	@echo "        Variables Used ${LABEL} Module Makefile"
	@echo
	@$(MAKE) gnuvars
	@$(MAKE) compvars
	@$(MAKE) gcntrlvars
	@$(MAKE) dirvars
	@$(MAKE) pkgvars

shortvars:
	@echo
	@echo "        Variables Used ${LABEL} Module Makefile"
	@echo

gnuvars:
	@echo
	@echo "  GNU Automatic BoilerPlate Variables In ${LABEL} Module"
	@echo
	@echo "  SHELL       The Shell Program                 = $(SHELL)"
	@echo "  MAKE        The Make Program Used             = $(MAKE)"
	@echo "  VPATH       The Virtual Path Defined          = $(VPATH)"
	@echo "  top_srcdir  The Top Source Directory          = $(top_srcdir)"
	@echo "  srcdir      The Current Source Directory      = $(srcdir)"
	@echo "  prefix      The Base Directory Prefix         = $(prefix)"
	@echo "  exec_prefix The Execution Directory Prefix    = $(exec_prefix)"
	@echo "  bindir      The Binary Directory              = $(bindir)"
	@echo "  libdir      The Library Directory             = $(libdir)"
	@echo "  infodir     The Info Directory                = $(infodir)"
	@echo "  mandir      The Man Pages Directory           = $(mandir)"
	@echo "  host        The Host Name                     = $(host)"
	@echo "  subdirs     The Defined Subdirectories        = $(subdirs)"
	@echo

compvars:
	@echo
	@echo "  Compilation Related Variables In ${LABEL} Module"
	@echo
	@echo "  CC          The C Compiler To Use             = $(CC)"
	@echo "  CFLAGS      The C Compiler Flags To Use       = $(CFLAGS)"
	@echo "  CPPFLAGS    The C Pre-processor Flags To Use  = $(CPPFLAGS)"
	@echo "  CXX         The C++ Compiler To Use           = $(CXX)"
	@echo "  CXXFLAGS    The C++ Compiler Flags To Use     = $(CXXFLAGS)"
	@echo "  AR          The Library Archiving Program     = $(AR)"
	@echo "  ARFLAGS     The Library Archiving Flags       = $(ARFLAGS)"
	@echo "  RANLIB      The Library Randomizing Program   = $(RANLIB)"
	@echo "  INSTALL     The Installation Program          = $(INSTALL)"
	@echo "  LIBS        The Defined Libraries             = $(LIBS)"
	@echo "  LDFLAGS     The Linker Flags                  = $(LDFLAGS)"
	@echo "  GCXXFLAGS   GAMMA Added C++ Compiler Flags    = $(GCXXFLAGS)"
	@echo "  C++FLAGS    Summed C++ Compiler Flags         = $(C++FLAGS)"
	@echo

gcntrlvars:
	@echo
	@echo "  GAMMA Make Control Variables in ${LABEL} Module"
	@echo
	@if (test -z $(NOTSOLO)) \
	then \
          echo "  NOTSOLO     Recursive Makes Run Directly      = $(NOTSOLO)"; \
	else \
          echo "  NOTSOLO     Recursive Makes Run Recursively   = $(NOTSOLO)"; \
	fi
	@echo "  GBASEVER    The GAMMA Base Version            = $(GBASEVER)"
	@echo "  GSUBVER     The GAMMA Sub Version             = $(GSUBVER)"
	@echo "  GBASEVERUL  The GAMMA Base Version Underline  = $(GBASEVERUL)"
	@echo "  GSUBVERUL   The GAMMA Sub Version Underline   = $(GSUBVERUL)"
	@echo "  GVERSION    The GAMMA Version                 = $(GVERSION)"
	@echo "  GVERSUL     The GAMMA Version Underline       = $(GVERSUL)"
	@echo "  LABEL       The Module Label for Output       = $(LABEL)"
	@echo "  LABUN       The Module Label Underline Output = $(LABUN)"
	@echo

dirvars:
	@echo
	@echo "  Specified GAMMA Directories in ${LABEL} Module"
	@echo
	@echo "  PROJECTPATH GAMMA Project Path (Full Direct.) = $(PROJECTPATH)"
	@echo "  ARCDIR      GAMMA Architecture Based Dir.     = $(ARCDIR)"
	@echo "  host        GAMMA Target Host (This Platform) = $(host)"
	@echo "  BIN         GAMMA Binary Dir  (This Platform) = $(BIN)"
	@echo "  LIB         GAMMA Library Dir (This Platform) = $(LIB)"
	@echo "  SRC         GAMMA Source Code Directory       = $(SRC)"
	@echo "  RCS         GAMMA RCS Repository Directory    = $(RCS)"
	@echo "  TST         GAMMA Tests  Directory            = $(TST)"
	@echo "  TSUITE      GAMMA Test Suite Directory        = $(TSUITE)"
	@echo "  GAMDIST     Relative Temp GAMMA Dist. Dir.    = $(SRCDIST)"
	@echo "  HOSTDIST    Relative Temp Arch Dist. Dir.     = $(HOSTDIST)"
	@echo "  BINDIST     Relative Temp Binary Dist. Dir.   = $(BINDIST)"
	@echo "  LIBDIST     Relative Temp Library Dist. Dir.  = $(LIBDIST)"
	@echo "  SRCDIST     Relative Temp Source Dist. Dir.   = $(SRCDIST)"
	@echo "  TSUITEDIST  Relative Temp TestSuite Dist. Dir.= $(TSUITEDIST)"
	@echo "  TSTDIST     Relative Temp Test Dist. Dir.     = $(TSTDIST)"
	@echo "  COPYGAM     Absolute Temp GAMMA Dist. Dir.    = $(SRC)"
	@echo "  COPYHOST    Absolute Temp Arch Dist. Dir.     = $(COPYHOST)"
	@echo "  COPYBIN     Absolute Temp Binary Dist. Dir.   = $(COPYBIN)"
	@echo "  COPYLIB     Absolute Temp Library Dist. Dir.  = $(COPYLIB)"
	@echo "  COPYSRC     Absolute Temp Source Dist. Dir.   = $(COPYSRC)"
	@echo "  COPYTSUITE  Absolute Temp TestSuite Dist. Dir.= $(COPYTSUITE)"
	@echo "  COPYTST     Absolute Temp Test Dist. Dir.     = $(COPYTST)"
	@echo

pkgvars:
	@echo
	@echo "  Specified GAMMA Package Distribution Names For ${LABEL} Module"
	@echo
	@echo "  BUILDF      Flag for Module Build            = $(BUILDF)"
	@echo "  LABEL       Module Label for Output          = $(LABEL)"
	@echo "  LABUN       Module Label Underline Output    = $(LABUN)"
	@echo "  DIRNAME     The Module Local Directory Name  = $(DIRNAME)"
	@echo "  MODULEDIR   GAMMA TestSuite Module Directory = $(MODULEDIR)"
	@echo "  MIRRORBASE  GAMMA Temporary Base Directory   = $(LOCMIRRORBASE)"
	@echo "  MIRRORSHARE GAMMA Temp Dir For TestSuite     = $(LOCMIRRORSHARE)"
	@echo "  MIRRORDIR   GAMMA Temp Directory For Module  = $(LOCMIRRORDIR)"
	@echo "  LIBNAME     GAMMA Library Name               = $(LIBNAME)"
	@echo "  SRCLOCAL    GAMMA Module Source Directory    = $(SRCLOCAL)"
	@echo "  CO          GAMMA RCS Check Out Command      = $(CO)"
	@if (test -z $(NOTSOLO)) \
	then \
	  echo "  BASENAME    Base Name Of File(s) Produced     = $(BASENAME)";\
	  echo "  TARFILE     Tar File To Be Produced           = $(TARFILE)";\
	  echo "  ZIPFILE     Compressed File To Be Produced    = $(ZIPFILE)";\
	  echo "  SRCNAME     Source Package Name               = $(SRCNAME)";\
	  echo "  SRCTAR      Tarred Source Package Name        = $(SRCTAR)";\
	  echo "  SRCZIP      Zipped Source Package Name        = $(SRCZIP)";\
	  echo "  BINNAME     Binary Package Name               = $(BINNAME)";\
	  echo "  BINTAR      Tarred Binary Package Name        = $(BINTAR)";\
	  echo "  BINZIP      Zipped Binary Package Name        = $(BINZIP)";\
	fi
	@echo ""

srcfiles:
	@echo
	@echo "      Source Files Defined For ${LABEL} Module Makefile"
	@echo
	@echo "$(CCFILES)"

hdrfiles:
	@echo
	@echo "      Header Files Defined For ${LABEL} Module Makefile"
	@echo
	@echo "$(HFILES)"

objfiles:
	@echo
	@echo "      Object Files Defined For ${LABEL} Module Makefile"
	@echo
	@echo "$(OBJ)"

