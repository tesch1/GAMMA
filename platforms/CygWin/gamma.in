
###############################################################################
#									      #
#                                 G A M M A                                   #
#                                                                             #
#            Compilation Script for the GAMMA MR Simulation Project           #
#                     Copyright (C) 1999 Scott A. Smith                       #
#                  National High Magnetic Field Laboratory                    #
#                         1800 E. Paul Dirac Drive                            #
#                     Tallahassee, FL, USA 32306-4005                         #
#                          ssmith@magnet.fsu.edu                              #
#                      On WWW See gamma.magnet.fsu.edu                        #
#                                                                             #
###############################################################################

###############################################################################
#                                                                             #
# First we set the "-v" option so that the command gamma -v will produce the  #
# program version number.  This is in accordance with GNU Coding Standards    #
# and used by the GAMMA testsuite (i.e. DejaGnu and Expect)                   #
#                                                                             #
###############################################################################

if [ "$1" = "-v" ]
then
  echo "GAMMA Version 4.2.0 CygWin Build"
  exit
fi

###############################################################################
#                                                                             #
# Here we set the "VERBOSE" option.  If this is not empty it will trigger the #
# script to spit out various bits of information to the screen when running.  #
# This is helpful in debugging as well as letting people know that they are   #
# running GAMMA.                                                              #
#                                                                             #
###############################################################################

VERBOSE="on"
if [ ${VERBOSE} ]
then
  echo ""
  echo ""
  echo "              G  A  M  M  A"
  echo ""
  echo "             (Version 4.2.0)"
  echo ""
  echo "  Written by Scott Smith and Tilo Levante"
  echo ""
  echo "            Dr. Scott A. Smith"
  echo "  National High Magnetic Field Laboratory"
  echo "         1800 E. Paul Dirac Drive"
  echo "      Tallahassee, FL, USA 32306-4005"
  echo "           (c) 2002 S.A. Smith"
  echo "        With modification thru 2010"
  echo "      More information on the web at: "
  echo " http://scion.duhs.duke.edu/vespa/gamma/wiki"
  echo ""
fi

###############################################################################
#                                                                             #
# Now We Must Set The Path Where GAMMA Resides, Its Base Directory. This      #
# Should Be Set Specifically In The GAMMA_PATH Line Below, But The Variable   #
# Is Set Up So That It May Also Be Specified Externally. Setting The          #
# Environment Variable GAMMA_PATH Will Override The Base Directory Indicated  #
# Herein.  That Way, Users May Easily Switch GAMMA Versions By Changing The   #
# GAMMA_PATH Value In Their Environment.                                      #
#                                                                             #
# NOTE: Path Should Be A Directory Having /src As Its Subdirectory.           #
# NOTE: If Altering GAMMA, Set This To Some Special Directory Off Of          #
#       Which Exists Any Particular Library Being Used For Testing!           #
#                                                                             #
###############################################################################

GAMMA_PATH=${GAMMA_PATH-CONFIGUREDGAMMAPATH}

###############################################################################
#                                                                             #
# Here We Try To Find Out Which Computer System GAMMA Is Running On. This Is  #
# Done By the Configuration Program "configure", But There Is Chance That Can #
# Fail. The Vaule of "host" Will Be Used To Direct The Compiler To Link To    #
# The Achitechture Specific GAMMA Libraries.  This MUST Be The Same One Used  #
# During The Installation Of GAMMA On This Machine. On Computers For Which    #
# The Value Of host Is Not Set Automatically By configure, Users Need To Set  #
# It By Hand. Any Name Can Be Used Here, AS LONG AS It Matches What Was Used  #
# By The GAMMA Makefile.  If You Aren't Sure, Look In Makefile For "host" And #
# See What The Value Is Set To There.  After Running "make all" There Will Be #
# A Subdirectory With The host Name Off Of The GAMMA Base Directory. That Is, #
# Along With /share Will Be One With A Name Taken From host.                  #
#                                                                             #
# If you are still uncertain, just set host to something like "sun4" or "sgi" #
# both in here and in the Makefile.  The run make all and make install.       #
#                                                                             #
###############################################################################

host='i686-pc-cygwin'
if [ ${VERBOSE} ]
then
  echo
  echo The Compilation Is Specific To ${host}
  echo
fi

###############################################################################
#                                                                             #
# Now We Must Know Which C++ Compiler To Use. Typically This Is GNU C++ Or    #
# The egcs Version Of It.  Variable CXX Is Used To Indicate Where To Find The #
# C++ Compiler Command On The System. It Should Be Set Automatically By The   #
# Configuration, But You Can Set It By Hand. Use Should Probably Use The Full #
# Path Although Just The Name Will Work If The Compiler Command Is In Your    #
# Path. We Also Set Some Compiler Flags Too.  These Are Listed Below.  You    #
# Can Change Them At Your Discretion.  Note That Command Line Options Will    #
# Be Preferentially Used Over These Settings.                                 #
#                                                                             #
# CXX      - The Command To Invoke The C++ Compiler                           #
# CXXFLAGS - The Flags To Include When Using The C++ Compiler                 #
# LDFLAGS  - The Flags To Include When Linking Programs                       #
# NAME     - The Output File Name, Nothing Makes it a.out                     #
# GPROF    - Flag To Include Profiling, Blank is No Profiling                 #
# SLIB     - The Standard Library To Use, -lm is Math Library                 #
# ARG      - These are Any Other Arguments Wanted In                          #
# STRIP    - A Stripping Flag, -s Strips Executable Reducing Its Size         #
#                                                                             #
###############################################################################

CXX="g++"
CXXFLAGS="-g -O2"
LDFLAGS=""
NAME=
GPROF=""
SLIB="-lm"
ARG=
STRIP="-s"

###############################################################################
#                                                                             #
# Now We Look More Closely At The "gamma" Command Used To Run This Script. In #
# Particular, We Look For The Additonal Compiler Flags. Known Options:        #
#                                                                             #
# -g	Compile With Debugging                                                #
# -o    Use The Ensuing Name For The Output File                              #
# -p    Use Profiling When Compiling                                          #
# *     Whatever Else, Just Accumulate Them In ARG                            #
#                                                                             #
###############################################################################

while [ "$1" != "" ]
do
  case "$1" in
  -g)		  STRIP="-g"
	  ;;
  -o)             NAME="$1 $2"
                  shift
          ;;
  -pg)	          GPROF="-pg"
                  ARG="$ARG -pg"
          ;;
  *)	  ARG="$ARG $1"
	  ;;
  esac
  shift
done

###############################################################################
#                                                                             #
# We Now Will Set A Variable For Where To Find GAMMA Source Code And Where To #
# Find The Library Specific To This System.  This Is So The Compiler Can Find #
# The Source Headers (filename.h) And The GAMMA Libraries.  If You Look Into  #
# The Directory Set As GAMMA_SRC You Should See Many Header Files.  Similarly #
# If You Look Into The Directory You Set As GAMMA_LIB You Should Find libXX.a #
# Files.  These Values Should Not Need Adjustment.                            #
#                                                                             #
###############################################################################

src='src'

GAMMA_SRC=${GAMMA_PATH}/${src}
GAMMA_LIB=${GAMMA_PATH}/${host}

###############################################################################
#                                                                             #
# This section defines the names of the produced GAMMA module libraries. You  #
# may remove any of these from linking to your GAMMA programs by setting them #
# to be empty.  For example, to remove the Floquet library from being linked  #
# simply set "LFLOQ=-lFloquet" to "LFLOQ=".  You should probably comment out  #
# the original lines so that you may later include such libraries if needed.  #
# Libraries ending with _p have included profiling during their build.        #
#                                                                             #
###############################################################################

MODLIBS=''
  LBAS=-lBasics				# GAMMA basic library
  LGMX=-lMatrix				# GAMMA matrices library
  LHS=-lHSLib				# GAMMA Hilbert space library
  LGLEV1=-lLevel1			# GAMMA Level 1 library
  LLS=-lLSLib				# GAMMA Liouville space library
  LGIO=-lGamIO				# GAMMA I/O interface library
  LGLEV2=-lLevel2			# GAMMA Level 2 library
  LBLH=-lBloch				# GAMMA Bloch library
  LWBR=-lWBR				# GAMMA WBR relaxtion library
  LFLOQ=-lFloquet 			# GAMMA Floquet operators
  LIR2=-lIntRank2			# GAMMA rank 2 interactions library
  LMUL=-lMultiSys			# GAMMA multi-sys systems library
  LPUL=-lPulses				# GAMMA pulse trains and cycles
  LDEP=-lDeprecated                     # GAMMA deprecated classes
  LESR=-lESRLib                         # GAMMA ESR based classes
  LGRD=-lGradients			# GAMMA field gradients
  LTST=-lTesting			# GAMMA platform testing

if [ ${GPROF}a != "-pga" ]
then
  MLIBS="${LTST} ${LDEP} ${LESR} ${LGRD} ${LMUL} ${LPUL} ${LFLOQ}\
         ${LIR2} ${LESR} ${LWBR} ${LBLH} ${LGLEV2} ${LGIO} ${LLS} ${LGLEV1}\
         ${LHS} ${LGMX} ${LBAS}"
else
  MLIBS="${LTST}_p ${LDEP}_p ${LESR}_p ${LGRD}_p ${LMUL}_p ${LPUL}_p ${LFLOQ}_p\
         ${LIR2}_p ${LESR}_p ${LWBR}_p ${LBLH}_p ${LGLEV2}_p ${LGIO}_p ${LLS}_p ${LGLEV1}_p\
         ${LHS}_p ${LGMX}_p ${LBAS}_p"
  if [ ${VERBOSE} ]
  then
    echo The Compilation Is Using Profiling So Execution Makes gmon.out
    echo
  fi
fi

###############################################################################
#                                                                             #
# Finally For The GAMMA Program Compilation. First We Shall Test To See If    #
# We Can Find The GAMMA Source Code Headers. If We Can Then We Probably Know  #
# Where We Are and Can Go Ahead And Compile. That Means All The Header Files  #
# Are In GAMMA_SRC And The GAMMA Libraries Are In GAMMA_LIB.  When (If) We    #
# Compile A GAMMA Based Program, The C++ Compiler Is Invoked With The Flags   #
# Set As Specified Above And We Link To The GAMMA Libraries Specified Above.  #
#                                                                             #
# If We Cant Find GAMMA_SRC, Then Exit With An Error Message                  #
#                                                                             #
###############################################################################

if [ -d ${GAMMA_SRC} ]
then
  if [ ${VERBOSE} ]
  then
    echo ${CXX} ${STRIP} -Wall ${ARG} -I${GAMMA_SRC}\
	   -D_GAMMA_SRC_=${GAMMA_SRC}\
           -L${GAMMA_LIB} -lgamma -lm ${NAME}
  fi
	${CXX}  ${STRIP} -Wall ${ARG} -I${GAMMA_SRC}\
	   -D_GAMMA_SRC_=${GAMMA_SRC}\
           -L${GAMMA_LIB} -lgamma -lm ${NAME}
else
  echo
  echo Apparently You Do Not Have A Proper Path Set To GAMMA......
  echo Please Set The Variable GAMMA_PATH To Reflect The Base GAMMA
  echo Directory, The One Off Of Which The Subdirectory share Exists.
  echo This Change Can Be Done In The gamma Script You Are Running
  echo Or You Can Set GAMMA_PATH As An Environment Variable. 
  echo
  echo Currently GAMMA_PATH is Set To $GAMMA_PATH
  echo
fi

