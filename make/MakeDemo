###############################################################################
#                                                                             #
#                                 G A M M A                                   #
#           Base Demos Makefile For The GAMMA MR Simulation Platform          #
#                     Copyright (C) 1999 Scott A. Smith                       #
#                  National High Magnetic Field Laboratory                    #
#                         1800 E. Paul Dirac Drive                            #
#                     Tallahassee, FL, USA 32306-4005                         #
#                          ssmith@magnet.fsu.edu                              #
#                      On WWW See gamma.magnet.fsu.edu                        #
#                                                                             #
# The concern of this Makefile is GAMMA base demo distribution and running.   #
# Herein are are defined the targets that are used for such purposes. The     #
# demo distribution target will create a single release file containing all   #
# base demo programs and associated documentation. The run demo target will   #
# compile and runs the demo programs, outputting the results to screen.       #
#                                                                             #
# Users are free to copy this file for personal use but may NOT give out      #
# modifications with or without the GAMMA platform. This and other makefiles  #
# are typically packaged with the GAMMA test distributions. It and other      #
# GAMMA distrubutions may be obtained from the GAMMA WWW site above or any    #
# of its mirrors.                                                             #
#                                                                             #
# Notes: We Still Need GNU Make For This To Work.                             #
#                                                                             #
###############################################################################

###############################################################################
#                                                                             #
#                             Makefile Targets                                #
#                                                                             #
# demo:     Runs the base demos. All base demos will be run and output sent   #
#           to the screen.                                                    #
# demodist: Creates a distribution file of GAMMA base demo programs along     #
#           with any documentation files.				      #
# demovars: Output all variables relevant to using this makefile to screen.   #
#           This is done in a nicely formatted manner and useful in Makefile  #
#           debugging. Most GAMMA users will not wish to use this.            #
#                                                                             #
###############################################################################

###############################################################################
###############################################################################
############################# VARIABLES ARE BELOW #############################
###############################################################################
###############################################################################

###############################################################################
#                                                                             #
#           OVERALL VARIABLES CONCEPT & MANDATORY EXTERNAL VARIABLES          #  
#                                                                             #
# Since the intent of this makefile is to simply be included into the main    #  
# GAMMA makefile, $(GAMMAVER)/Makefile, it does not define any variables that #
# would be needed by other makefiles.  It does however require that some      #
# variables be set and it will make some variables to use for its own         #  
# convenience.  One must simply insure that any required external variables   #
# have been specified prior to running any targets defined herein. Thus, the  #
# main Makefile, $(GAMMAVER)/Makefile, must supply all required external      #
# variables. Here is what we will need defined:                               #
#                                                                             #
# GVERSION:    Current GAMMA version, set in Makefile MakeGam (e.g. 4.0.4B)   #
# GAMPGMSCR:   GAMMA program script name. For example, gamma.                 # 
# GAMWEBDEM:   Web URL where GAMMA demos may be downloaded.                   # 
# GAMWEBBUG:   Web URL where GAMMA bugs may be reported.                      # 
# GAMWEBINST:  Web URL where GAMMA installation instructions are.             # 
# GAMDIST:     Name of demo distribution mock directory. This will be used    #
#              in issuing the tar or zip command. This variable will be       #  
#              defined in  the Makefile MakeGam                               #  
# PROJECTPATH: Directory where the tar command is issued from. Hopefully      #  
#              this is also where the mock directory $GAMMA/demo/ resides     #
#              containing copied demo distribution files. This variable will  #
#              be defined in the main GAMMA Makefile.                         #  
# NPD:         Makefile --no-print-directory directive.                       #  
# MAKE:        The makefile being worked with. Set when invoking Make         #  
# DEMOUNIX:    Flag if Unix-like distribution is to be made (demopkg.tar.gz)  #
# DEMOWINDOWS: Flag if Windows-like distribution is to be made (demopkg.zip)  #
# DEMODIR:     GAMMA demo directory name. For example, demo.                  #  
# DEMODIST:    GAMMA demo dist. directory name, e.g. ./$GAMMAVER/demo.        #  
# DEMOFILES:   Name of all base demo files that will be released in a base    #
#              demo distribution.                                             #
# DEMOTAR:     Name of the demo distribution tar file to be created.          #  
#              This will be defined in the Makefile MakeGam                   #  
# GZIPPGM:     Name of program that will compress tar files (tar->tar.gz)     #
# GZIPFLGS:    Flags for the compression program GZIPPGM (usually none)       #  
# DEMOGZIP:    Name of the demo distribution gz file to be created from the   #
#              Unix type compression of the demo tar file, DEMOTAR.           #  
#              This variable will be defined in the Makefile MakeGam.         #  
# ZIPPGM:      Program that compresses distribution directory (pkzip or zip)  #
# ZIPFLGS:     Flags for the compression program ZIPPGM (usually -p -r)       #  
# DEMOZIP:     Name of the demo distribution zip file to be created from the  #
#              Windows type compression of demo distrib. directory, GAMDIST.  #
#                                                                             #
###############################################################################

###############################################################################
#                                                                             #
#                            CONVENIENCE VARIABLES                            #  
#                                                                             #
# These variables are built from those defined above. They are only needed in #
# this makefile and only created to simplify the targets herein defined.      #
# starred names are those which are only used in SOLO mode.                   #  
#                                                                             #
# DEMORELEASE - Name of all base demo files that will be released in a base   #
#               demo distribution. Relative to GAMMAVER directory, for        #
#               example ./demo/demo1.cc                                       #
#                                                                             #
###############################################################################

DEMORELEASE  = $(addprefix ./$(DEMODIR)/, $(DEMOFILES))

###############################################################################
###############################################################################
############################## TARGETS ARE BELOW ##############################
###############################################################################
###############################################################################

###############################################################################
#                                                                             #
#                                Target: demo                                 #
#                                                                             #
# This target runs GAMMA tests that reside in the test subdirectory, usually  #
# $GAMMA/test. Specifically, it will run the provided test program TESTPGM,   #
# usally $GAMMA/test/TestGAMMA.cc. The target will check that both the test   #
# directory and test program exist, the compile and run the test.	      #
#                                                                             #
# GVERSION:   Current GAMMA version, set in Makefile MakeGam (e.g. 4.0.4B)    #
# DEMODIR:    GAMMA demo directory name. For example, demo.                   #
# GAMPGMSCR:  GAMMA program script name. For example, gamma.                  # 
# GAMWEBDEM:  Web URL where GAMMA demos may be downloaded.                    # 
# GAMWEBBUG:  Web URL where GAMMA bugs may be reported.                       # 
# GAMWEBINST: Web URL where GAMMA installation instructions are.              # 
#                                                                             #
# Note that when it comes down to actually compiling and executing the demo   #
# programs this just calls the Makefile in the demo directory $(DEMODIR)      #
#                                                                             #
###############################################################################

demo: force 
	@echo
	@echo "                     Running Base Demos"
	@echo "                    GAMMA Version $(GVERSION)"
	@echo
	@$(MAKE) $(NPD) checkdemopkg
	@if (test -d ./$(DEMODIR)) then $(MAKE) $(NPD) checkgamex; fi
	@if (test -f ./$(GAMPGMSCR) && test -d ./$(DEMODIR)) \
	then \
          cd ./$(DEMODIR); \
	  $(MAKE) $(NPD) demos; \
	fi

###############################################################################
#                                                                             #
#                   Targets: demo1, demo2, demo3, demo4                       #
#                                                                             #
# These targets run individual GAMMA demo progarms that reside in the demo    #
# subdirectory, usually $GAMMA/demo.  Specifically, it will run the provided  #
# demo program associated with the target name, usally $GAMMA/demo/target.cc. #
# The targets will check that both the demo directory existsw and that the    #
# gamma script exists.  If these are true they will try to compile and run    #
# the demo.	                                                              #
#                                                                             #
# GVERSION:   Current GAMMA version, set in Makefile MakeGam (e.g. 4.0.4B)    #
# DEMODIR:    GAMMA demo directory name. For example, demo.                   #
# GAMPGMSCR:  GAMMA program script name. For example, gamma.                  # 
# GAMWEBDEM:  Web URL where GAMMA demos may be downloaded.                    # 
# GAMWEBBUG:  Web URL where GAMMA bugs may be reported.                       # 
#                                                                             #
# force:        Target which is never satisfied to force a target to run.     #
# checkdemopkg: Target that checks that the demo directory is present. This   #
#               is used as an indicator of whether the demo package has been  #
#               installed.                                                    #
#                                                                             #
###############################################################################

demo1: force
	@echo
	@$(MAKE) $(NPD) checkdemopkg
	@if (test -d ./$(DEMODIR)) then $(MAKE) $(NPD) checkgamex; fi
	@if (test -f ./$(GAMPGMSCR) && test -d ./$(DEMODIR)) \
	then \
	echo "   *   Running Base Demo 1"; \
	cd ./$(DEMODIR); \
	  $(MAKE) $(NPD) demo1.run; \
	fi

demo2: force
	@echo
	@$(MAKE) $(NPD) checkdemopkg
	@if (test -d ./$(DEMODIR)) then $(MAKE) $(NPD) checkgamex; fi
	@if (test -f ./$(GAMPGMSCR) && test -d ./$(DEMODIR)) \
	then \
	echo "   *   Running Base Demo 2"; \
	cd ./$(DEMODIR); \
	  $(MAKE) $(NPD) demo2.run; \
	fi
	
demo3: force
	@echo
	@$(MAKE) $(NPD) checkdemopkg
	@if (test -d ./$(DEMODIR)) then $(MAKE) $(NPD) checkgamex; fi
	@if (test -f ./$(GAMPGMSCR) && test -d ./$(DEMODIR)) \
	then \
	echo "   *   Running Base Demo 3"; \
	cd ./$(DEMODIR); \
	  $(MAKE) $(NPD) demo3.run; \
	fi
	
demo4: force
	@echo
	@$(MAKE) $(NPD) checkdemopkg
	@if (test -d ./$(DEMODIR)) then $(MAKE) $(NPD) checkgamex; fi
	@if (test -f ./$(GAMPGMSCR) && test -d ./$(DEMODIR)) \
	then \
	echo "   *   Running Base Demo 4"; \
	cd ./$(DEMODIR); \
	  $(MAKE) $(NPD) demo4.run; \
	fi
	
###############################################################################
#                                                                             #
#                                                                             #
###############################################################################

#sosi
MODDEMODIR = ./${DEMODIR}/modules

BASICSDEMO_SRC = ${MODDEMODIR}/DemoBasics.cc
BASICSDEMO_OBJ = ${MODDEMODIR}/DemoBasics.o

#Basicsdemo: ${BASICSDEMO_OBJ}
Basicsdemo: force
	echo Module Demo Directory is ${MODDEMODIR}
	echo Bin Directory is ${BIDDIR}
	$(CXX) -o $@ $(CXXFLAGS) $(LDFLAGS) ${BASICSDEMO_OBJ} -L${BINDIR}/ -lBasics
	./$@ ${DEMODIR}




###############################################################################
#                                                                             #
#                            Target: checkdemopkg                             #
#                           DO NOT RUN THIS TARGET                            #
#                                                                             #
# This target is part of the GAMMA base demos execution target & is NOT meant #
# to run solo. It checks that the GAMMA demo directory exists and reports     #
# what to do if it does not. Since I don't know how to exit the make program  #
# the will not quit on any error. But it will set the variable OK to be empty #
# if there are problems so that it may be checked later.                      #
#                                                                             #
###############################################################################

checkdemopkg: force 
	@if (test ! -d ./$(DEMODIR)) \
	then \
	  echo " * Cannot Find Base Demo Directory ./$(DEMODIR)!" ; \
          echo "   Having Some Problems Running GAMMA Demos...." ; \
          echo " * Perhaps The Demos Have Not Been Properly Installed?" ; \
          echo " * If Not, See $(GAMWEBDEM)" ; \
          echo " * Else Report Problems At $(GAMWEBBUG)" ; \
          echo; \
          echo "                SORRY, CANNOT RUN GAMMA DEMOS" ; \
          echo; \
          echo; \
	fi

###############################################################################
#                                                                             #
#                             Target: checkgamex                              #
#                           DO NOT RUN THIS TARGET                            #
#                                                                             #
# This target is part of the GAMMA base demos execution target & is NOT meant #
# to run solo. It checks that the GAMMA script exists and reports what to do  #
# what to do if it does not. Since I don't know how to exit the make program  #
# the will not quit on any error. But it will set the variable OK to be empty #
# if there are problems so that it may be checked later.                      #
#                                                                             #
###############################################################################

checkgamex: force 
	@if (test ! -f ./$(GAMPGMSCR)) \
	then \
	  echo " * Cannot Find GAMMA Execution Script ./$(GAMPGMSCR)!" ; \
          echo "   Having Some Problems Running GAMMA Itself...." ; \
          echo "   The GAMMA Script, $(GAMPGMSCR), Should Run GAMMA?"; \
          echo " * Perhaps GAMMA Has Not Been Properly Installed?" ; \
          echo " * If Not, See $(GAMWEBINST)" ; \
          echo " * Else Report Problems At $(GAMWEBBUG)" ; \
          echo; \
          echo "                SORRY, CANNOT RUN GAMMA DEMOS" ; \
          echo; \
          echo; \
	fi

###############################################################################
#                                                                             #
#                               Target: demodist                              #
#                                                                             #
# This target is used to distribute the GAMMA base demos package. It will     #
# copy ALL GAMMA released base demo source & documentation files to a temp.   #
# directory which maintains the GAMMA directory hierarchy. It will then       #
# compress files into a single file (package) for distribution. Compression   #
# can be done in an Unix fashion (tar then gzip to make tar.gz file) and/or   #
# in Windows fashion (pkzip to make zip file). Finally, all files in the      #
# temporary demo directory are deleted, leaving only the packaged file(s).    #  
#                                                                             #
# GVERSION: The current GAMMA version, set in Makefile MakeGam (e.g. 4.0.4B)  #
# MAKE:     The makefile being worked with. Set when invoking Make            #
# SUBDIRS:  The subdirectories with recursive Makefiles for the distribution. #
#           This will be declared in the main GAMMA makefile.                 #
# PASSFLAGS:The flags that will be passed to the recursed makefiles. This     #  
#           variable will be specified in the main GAMMA makefile.            #
#                                                                             #
###############################################################################
 
demodist:
	@echo
	@echo "              Making A Base Demos Distribution"
	@echo "                    GAMMA Version $(GVERSION)"
	@echo
	@${MAKE} $(NPD) demodir
	@${MAKE} $(NPD) democopy
	@if (test ! -z $(DEMOUNIX)) \
	then \
	  ${MAKE} $(NPD) demotar; \
	  ${MAKE} $(NPD) demogzip; \
	fi
	@if (test ! -z $(DEMOUNIX)) \
	then \
	  ${MAKE} $(NPD) demozip; \
	fi
	@${MAKE} $(NPD) democlean;
	@echo

###############################################################################
#                                                                             #
#                              Target: demodir                                #
#                           DO NOT RUN THIS TARGET                            #
#                                                                             #
# This target is part of the GAMMA base demos source distribution target & is #
# NOT really meant to run solo. It constructs a "mock" GAMMA directory off    #
# of the current directory. In doing so it allows this makefile to generate   #
# a tar distribution file that, when untarred in the GAMMA root directory,    #
# generates all the released files having standard GAMMA directory structure. #
#                                                                             #
# PROJECTPATH - Directory where the tar command is issued from. Hopefully     #
#               this is also where the mock directory $GAMMA/test/ resides    #
#               containing copied test distribution files. This variable will #
#               be defined in the main GAMMA Makefile.                        #
# GAMDIST     - Name of test distribution mock directory. This will be used   #
#               as the based directory where copied files are sent. This      #
#               variable will be defined in the Makefile MakeGam	      #
# DEMODIST    - GAMMA demo dist. directory name, e.g. ./$GAMMAVER/demo. This  #
#               will be the location where GAMMA demo files are copied to.    #
#               This variable will be defined in the Makefile MakeGam         #
#                                                                             #
###############################################################################

 demodir:
	@echo ""
	@echo " * Current GAMMA Directory Is $(PROJECTPATH)"
	@echo " * Copied GAMMA Files Go In Temporary Directory ./$(GAMDIST)"
	@if (test -d ./$(GAMDIST)) \
	then \
           echo " * Temp Directory Exists. First Clearing It" ; \
           echo "   Removing Directory ./$(GAMDIST)" ; \
	   rm -rf ./$(GAMDIST); \
	fi
	@echo " * Constructing A New GAMMAVER Temporary Directory"
	@echo "   Making Directory ./$(GAMDIST)"
	@mkdir $(GAMDIST)
	@chmod ug+w $(GAMDIST)
	@echo " * Next Construct The Demo Temporary Directory"
	@echo "   Making Directory ./$(DEMODIST)"
	@mkdir $(DEMODIST)
	@chmod ug+w $(DEMODIST)

###############################################################################
#                                                                             #
#                              Target: democopy                               #
#                           DO NOT RUN THIS TARGET                            #  
#                                                                             #
# This target is part of the GAMMA demo distribution target & NOT meant to    #
# run solo. It just takes all of the files associated with the GAMMA base     #
# demos and copies them into the temporary demo directory.                    #  
#                                                                             #
# DEMODIR     - GAMMA demo directory name. For example, demo.                 #
# DEMODIST    - GAMMA demo dist. directory name, e.g. ./$GAMMAVER/demo.       #
# DEMOFILES   - Name of all base demo files that will be released in a base   #
#               demo distribution. Relative to demo directory, e.g. demo1.cc  #
# DEMORELEASE - Name of all base demo files that will be released in a base   #
#               demo distribution. Relative to GAMMAVER directory, for        #
#               example ./demo/demo1.cc                                       #
# GAMDIST     - Name of demo distribution mock directory. This will be used   #
#               in issuing the tar or zip command. This variable will be      #
#               defined in  the Makefile MakeGam                              #
#                                                                             #
###############################################################################

democopy:                                                                     
	@echo " * Copying All Base Demo Files For Distribution"
	@echo " * Copying Specific Files From The GAMMA Demo Directory"
	@echo "   From: $(DEMODIR)"
	@echo "   To:   $(DEMODIST)"
	@for i in $(DEMOFILES); do \
	  echo  "   Copy: ./$(DEMODIR)/$$i To ./$(DEMODIST)"; \
	done
	@cp $(DEMORELEASE) ./$(GAMDIST)/$(DEMODIR)

###############################################################################
#                                                                             #
#                               Target: demotar                               #
#                           DO NOT RUN THIS TARGET                            #
#                                                                             #
# This target is part of the GAMMA platform base demo distribution target,    #
# demodist, and not meant to run solo. It takes all of the files that are to  #
# be released in the base demos package and tars them into a single file. All #
# released files have hopefully been copied into a mock demo directory from   #
# the main GAMMA directory that appears (appropriately) as a $GAMMA/demo/...  #
# directory but using $GAMMA is this temporary directory rather than the true #
# GAMMA home directory.                                                       #
#                                                                             #
# PROJECTPATH - Directory where the tar command is issued from. Hopefully     #
#               this is also where the mock directory $GAMMA/demo/ resides    #
#               containing copied demo distribution files. This variable will #
#               be defined in the main GAMMA Makefile.                        #
# DEMOTAR     - Name of the demo distribution tar file to be created.         #
#               This will be defined in the Makefile MakeGam                  #
# GAMDIST     - Name of demo distribution mock directory. This will be used   #
#               in issuing the tar command. This variable will be defined in  #
#               the Makefile MakeGam                                          #
# DEMOUNIX    - Flags whether a Unix like demo distribution is being made or  #
#               not.  If DEMOUNIX = "" then no such distribution will be done #
#               and this target will be skipped.                              #
#                                                                             #
###############################################################################

demotar:
	@echo " * Generating Tar File Of GAMMA Base Demos Distribution"
	@echo "   Making New TarFile From $(PROJECTPATH)"
	@echo "   New TarFile Will Be Called $(DEMOTAR)"
	@if (test -f $(DEMOTAR)) \
	then \
	  echo "   First Deleting Existing Tar File $(DEMOTAR)"; \
	  rm -f $(DEMOTAR); \
	fi
	@echo "   Tar Done Using Relative Directory ./$(GAMDIST)"
	@tar cf $(DEMOTAR) ./$(GAMDIST)
	@echo "   New Tar File $(DEMOTAR) Complete"
 
###############################################################################
#                                                                             #
#                          Targets: demogzip, demozip                         #
#                            DO NOT RUN THIS TARGET                           #
#                                                                             #
# This target is part of the GAMMA platform demo source distribution target,  #
# demodist, and not meant to run solo. It makes a single compressed file that #
# will uncompress from the main GAMMA directory into GAMMAVER/demo to fill    #
# the GAMMA demo directory hierarchy. There are two possible packaged files   #
# that can be generated. The first, via target demogzip, works in a Unix      #
# fashion (normally using gnuzip) by compressing at tar file for the demos    #
# package into a tar.gz file.  The tar file is that produced by previous      #
# target demotar.  The second file, via target demozip, works in a Windows    #
# like manner (normally using zip or pkzip) bu compressing the temporary      #
# demo distribution directory (GAMDIST) directly.                             #
#                                                                             #
# DEMOTAR     - Name of the demo distribution tar file created in demotar.    #  
#               This is defined Makefile MakeGam as include in main Makefile. #
# GZIPPGM     - Name of program that will compress tar files (tar->tar.gz)    #
# GZIPFLGS    - Flags for the compression program GZIPPGM (usually none)      #  
# DEMOGZIP    - Name of the demo distribution gz file to be created from the  #  
#               Unix type compression of the demo tar file, DEMOTAR.          #
#               This variable will be defined in the Makefile MakeGam.        #  
# PROJECTPATH - Directory where the tar command is issued from. Hopefully     #  
#               this is also where the mock directory $GAMMA/src/ resides     #  
#               containing copied src distribution files. This variable will  #
#               be defined in the main GAMMA Makefile.                        #  
# ZIPPGM      - Program that compresses distribution directory (pkzip or zip) #
# ZIPFLGS     - Flags for the compression program ZIPPGM (usually -p -r)      #  
# DEMOZIP     - Name of the demo distribution zip file to be created from the #  
#               Windows type compression of demo distrib. directory, GAMDIST. #
# GAMDIST     - Name of source distribution mock directory. This will be used #
#               as the based directory where copied files are sent. This      #  
#               variable will be defined in  the Makefile MakeGam             #  
#                                                                             #
###############################################################################
 
demogzip: 
	@echo " * Generating Unix Zipped File Of GAMMA Demo Source Distribution"; 
	@echo "   The Tar File $(DEMOTAR) Will Be Compressed Using $(GZIPPGM)";
	@if (test -f $(DEMOGZIP)) \
        then \
          echo "   First Deleting Existing Zip File $(DEMOGZIP)"; \
          rm -f $(DEMOGZIP); \
        fi
	@echo "   Making New Zip File From $(DEMOTAR)"
	@$(GZIPPGM) $(GZIPFLGS) $(DEMOTAR)
	@echo "   New Zip File Completed, Named $(DEMOGZIP) In Current Directory"
	@echo "   The Current Directory Is $(PROJECTPATH)"
 
demozip: 
	@echo " * Generating Windows Zipped File Of GAMMA Demo Source Distribution"; 
	@echo "   The Entire Directory $(GAMDIST) Will Be Zipped";
	@echo "   Command To Zip Will Be $(ZIPPGM) $(ZIPFLGS) $(DEMOZIP) $(GAMDIST)";
	@echo "   The Resulting Zip File Will Be Named $(DEMOZIP)";
	@if (test -f $(DEMOZIP)) \
        then \
          echo "   First Deleting Existing Zip File $(DEMOZIP)"; \
          rm -f $(DEMOZIP); \
        fi
	@echo "   Making New Zip File From $(GAMDIST)"
	@$(ZIPPGM) $(ZIPFLGS) $(DEMOZIP) $(GAMDIST)
	@echo "   New Zip File Completed, Named $(DEMOZIP) In Current Directory"
	@echo "   The Current Directory Is $(PROJECTPATH)"

###############################################################################
#                                                                             #
#                              Target: democlean                              #
#                                                                             #
# During a GAMMA base demo distribution a mock directory is produced which    #
# mimicks the GAMMA directory hierarchy. It contains copies of the demo       #
# programs and documentaiton files that are included in the distribution.     #
# This target removes any temporary directories and files that have been      #
# produced in a GAMMA base demo distribution. The the final distribution      #
# package is not removed.                                                     #
#                                                                             #
# GAMDIST     - Name of source distribution mock directory. This will be used #
#               as the based directory where copied files are sent. This      #  
#               variable will be defined in  the Makefile MakeGam             #  
#                                                                             #
###############################################################################
 
democlean:
	@echo " * Cleaning Up Temporary Base Demo Files And Any Directories"
	@echo "   Removing Files Below ./$(GAMDIST) And ./$(GAMDIST) Directory"
	@rm -rf $(GAMDIST)

###############################################################################
#                                                                             #
#                               Target: demovars                              #
#                                                                             #
# During a GAMMA base demos distribution files are moved around, directories  #
# created and destroyed. This can be dangerous if some variables in the       #
# Makefile are improperly set. At the vary least, the different targets will  #
# not work. At worst, important files are destroyed.  This target will simply #
# spit out all of the variables that are (overtly) used in the makefile. This #
# way one can have a look if things appear proper prior to running anything   #
# that does file/directory manipulations. This target is not normally run by  #
# a GAMMA user, it is more useful in building makefiles and debugging them.   #  
#                                                                             #
# GAMDIST     - Name of demo distribution mock directory. This will be used   #
#               in issuing the tar or zip command. This variable will be      #
#               defined in  the Makefile MakeGam                              #
# PROJECTPATH - Directory where the tar command is issued from. Hopefully     #
#               this is also where the mock directory $GAMMA/demo/ resides    #
#               containing copied demo distribution files. This variable will #
#               be defined in the main GAMMA Makefile.                        #
# MAKE        - The makefile being worked with. Set when invoking Make        # 
# NPD         - Makefile --no-print-directory directive.                      #  
# DEMOUNIX    - Flag if Unix-like distribution is to be made (demopkg.tar.gz) #
# DEMOWINDOWS - Flag if Windows-like distribution is to be made (demopkg.zip) #
# DEMODIR     - GAMMA demo directory name. For example, demo.                 #
# DEMODIST    - GAMMA demo dist. directory name, e.g. ./$GAMMAVER/demo.       #
# DEMOFILES   - Name of all base demo files that will be released in a base   #
#               demo distribution.                                            #
# DEMOTAR     - Name of the demo distribution tar file to be created.         #
#               This will be defined in the Makefile MakeGam                  #
# GZIPPGM     - Name of program that will compress tar files (tar->tar.gz)    #
# GZIPFLGS    - Flags for the compression program GZIPPGM (usually none)      #  
# DEMOGZIP    - Name of the demo distribution gz file to be created from the  #  
#               Unix type compression of the demo tar file, DEMOTAR.          #
#               This variable will be defined in the Makefile MakeGam.        #  
# ZIPPGM      - Program that compresses distribution directory (pkzip or zip) #
# ZIPFLGS     - Flags for the compression program ZIPPGM (usually -p -r)      #  
# DEMOZIP     - Name of the demo distribution zip file to be created from the #  
#               Windows type compression of demo distrib. directory, GAMDIST. #
#                                                                             #
###############################################################################
 
demovars:
	@echo
	@echo "   Make Variables Used For GAMMA Base Demo Distrubutions"
	@echo "   -----------------------------------------------------"
	@echo
	@echo "  GVERSION     The GAMMA Version                 = $(GVERSION)"
	@echo "  GAMDIST      Relative Temp GAMMA Dist. Dir.    = $(GAMDIST)"
	@echo "  GAMMAPGM     The GAMMA Program Name            = $(GAMMAPGM)"
	@echo "  MAKE         The Make Program Being Used       = $(MAKE)"
	@echo "  NPD          The Make No Print Directory       = $(NPD)"
	@echo "  PROJECTPATH  GAMMA Project Path (Full Direct.) = $(PROJECTPATH)"
	@echo "  DEMODIR      The GAMMA Test Directory Name     = $(DEMODIR)"
	@echo "  DEMODIST     The GAMMA Mock Test Directory     = $(DEMODIST)"
	@if (test ! -z $(DEMOUNIX)) \
	then \
	  echo "  DEMOUNIX     Unix Flag - Make Unix Package     = $(DEMOUNIX)"; \
	  echo "  DEMOTAR      Tarred Demo Package Name          = $(DEMOTAR)"; \
	  echo "  GZIPPGM      Unix Zip Program Name             = $(GZIPPGM)"; \
	  echo "  GZIPFLGS     Unix Zip Program Flags            = $(GZIPFLGS)"; \
	  echo "  DEMOGZIP     Unix Zipped Demo Package Name     = $(DEMOGZIP)"; \
	else \
	  echo "  DEMOUNIX     Unix Flag - No Unix Package      = $(DEMOUNIX)"; \
	fi
	@if (test ! -z $(DEMOWINDOWS)) \
	then \
	  echo "  DEMOWINDOWS  Windows Flag - Make Windows Pkg   = $(DEMOWINDOWS)"; \
 	  echo "  ZIPPGM       Windows Zip Program Name          = $(ZIPPGM)"; \
	  echo "  ZIPFLGS      Windows Zip Program Flags         = $(ZIPFLGS)"; \
	  echo "  DEMOZIP      Windows Zipped Demo Package Name  = $(DEMOZIP)"; \
	else \
	  echo "  DEMOWINDOWS  Windows Flag - No Windows Pkg     = $(DEMOWINDOWS)"; \
	fi
	@for i in $(DEMOFILES); do \
	echo "  DEMOFILES    File To Include In Distribution   = $$i"; \
	done
	@echo
