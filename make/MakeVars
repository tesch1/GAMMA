###############################################################################
#                                                                             #
#                                 G A M M A                                   #
#               Makefile For The GAMMA MR Simulation Platform                 #
#                     Copyright (C) 1999 Scott A. Smith                       #
#                  National High Magnetic Field Laboratory                    #
#                         1800 E. Paul Dirac Drive                            #
#                     Tallahassee, FL, USA 32306-4005                         #
#                          ssmith@magnet.fsu.edu                              #
#                      On WWW See gamma.magnet.fsu.edu                        #
#                                                                             #
# The concern of this Makefile is GAMMA makefile testing. It is quite simple. #
# There exists a single target, variables, that can be run to have the        #
# main Makefile spit out all used variables as it currently sees it.  This is #
# just useful for those who are modifying the makefile, namely me.            #
#                                                                             #
# Users are free to copy this file for personal use but may NOT give out      #
# modifications with or without the GAMMA platform.  This and other makefiles #
# are typically packaged with the full GAMMA source distribution.  The full   #
# src distrubution may be obtained from the GAMMA WWW site above or any of    #
# its mirrors.                                                                #
#                                                                             #
###############################################################################

###############################################################################
#                                                                             #
#                            Target: variables                                #
#                                                                             #
# This target just spits out all of the important variable names used in this #
# makefile as well as the makefiles which are recursively called.             #
#                                                                             #
###############################################################################

variables:
	@echo
	@echo "               Variables Used In ${LABEL} Main Makefile"
	@echo
	@$(MAKE) gnuvars
	@$(MAKE) compvars
	@$(MAKE) gcntrlvars
	@$(MAKE) dirvars
	@$(MAKE) pkgvars

gnuvars:
	@echo
	@echo "  GNU Automatic BoilerPlate Variables"
	@echo
	@echo "  SHELL       The Shell Program                 = $(SHELL)"
	@echo "  MAKE        The Make Program Used             = $(MAKE)"
	@echo "  VPATH       The Virtual Path Defined          = $(VPATH)"
	@echo "  top_srcdir  The Top Source Directory          = $(top_srcdir)"
	@echo "  srcdir      The Current Source Directory      = $(srcdir)"
	@echo "  prefix      The Base Directory Prefix         = $(prefix)"
	@echo "  exec_prefix The Execution Directory Prefix    = $(exec_prefix)"
	@echo "  bindir      The Binary Directory              = $(bindir)"
	@echo "  libdir      The Library Directory             = $(libdir)"
	@echo "  infodir     The Info Directory                = $(infodir)"
	@echo "  mandir      The Man Pages Directory           = $(mandir)"
	@echo "  host        The Host Name                     = $(host)"
	@echo "  subdirs     The Defined Subdirectories        = $(subdirs)"
	@echo

compvars:
	@echo
	@echo "  Compilation Related Variables"
	@echo
	@echo "  CC          The C Compiler To Use             = $(CC)"
	@echo "  CFLAGS      The C Compiler Flags To Use       = $(CFLAGS)"
	@echo "  CPPFLAGS    The C Pre-processor Flags To Use  = $(CPPFLAGS)"
	@echo "  CXX         The C++ Compiler To Use           = $(CXX)"
	@echo "  CXXFLAGS    The C++ Compiler Flags To Use     = $(CXXFLAGS)"
	@echo "  AR          The Library Archiving Program     = $(AR)"
	@echo "  ARFLAGS     The Library Archiving Flags       = $(ARFLAGS)"
	@echo "  RANLIB      The Library Randomizing Program   = $(RANLIB)"
	@echo "  INSTALL     The Installation Program          = $(INSTALL)"
	@echo "  LIBS        The Defined Libraries             = $(LIBS)"
	@echo "  LDFLAGS     The Linker Flags                  = $(LDFLAGS)"
	@echo "  GCXXFLAGS   GAMMA Added C++ Compiler Flags    = $(GCXXFLAGS)"
	@echo "  C++FLAGS    Summed C++ Compiler Flags         = $(C++FLAGS)"
	@echo

gcntrlvars:
	@echo
	@echo "  GAMMA Make Control Variables"
	@echo
	@if (test -z $(NOTSOLO)) \
	then \
          echo "  NOTSOLO     Recursive Makes Run Directly      = $(NOTSOLO)"; \
	else \
          echo "  NOTSOLO     Recursive Makes Run Recursively   = $(NOTSOLO)"; \
	fi
	@echo "  GBASEVER    The GAMMA Base Version            = $(GBASEVER)"
	@echo "  GSUBVER     The GAMMA Sub Version             = $(GSUBVER)"
	@echo "  GBASEVERUL  The GAMMA Base Version Underline  = $(GBASEVERUL)"
	@echo "  GSUBVERUL   The GAMMA Sub Version Underline   = $(GSUBVERUL)"
	@echo "  GVERSION    The GAMMA Version                 = $(GVERSION)"
	@echo "  GVERSUL     The GAMMA Version Underline       = $(GVERSUL)"
	@echo "  LABEL       The Module Label for Output       = $(LABEL)"
	@echo "  LABUN       The Module Label Underline Output = $(LABUN)"
	@echo

dirvars:
	@echo
	@echo "  Specified GAMMA Directories"
	@echo
	@echo "  PROJECTPATH GAMMA Project Path (Full Direct.) = $(PROJECTPATH)"
	@echo "  ARCDIR      GAMMA Architecture Based Dir.     = $(ARCDIR)"
	@echo "  host        GAMMA Target Host (This Platform) = $(host)"
	@echo "  BIN         GAMMA Binary Dir  (This Platform) = $(BIN)"
	@echo "  LIB         GAMMA Library Dir (This Platform) = $(LIB)"
	@echo "  SRC         GAMMA Source Code Directory       = $(SRC)"
	@echo "  RCS         GAMMA RCS Repository Directory    = $(RCS)"
	@echo "  TST         GAMMA Tests  Directory            = $(TST)"
	@echo "  TSUITE      GAMMA Test Suite Directory        = $(TSUITE)"
	@echo "  GAMDIST     Relative Temp GAMMA Dist. Dir.    = $(SRCDIST)"
	@echo "  HOSTDIST    Relative Temp Arch Dist. Dir.     = $(HOSTDIST)"
	@echo "  BINDIST     Relative Temp Binary Dist. Dir.   = $(BINDIST)"
	@echo "  LIBDIST     Relative Temp Library Dist. Dir.  = $(LIBDIST)"
	@echo "  SRCDIST     Relative Temp Source Dist. Dir.   = $(SRCDIST)"
	@echo "  TSUITEDIST  Relative Temp TestSuite Dist. Dir.= $(TSUITEDIST)"
	@echo "  TSTDIST     Relative Temp Test Dist. Dir.     = $(TSTDIST)"
	@echo "  COPYGAM     Absolute Temp GAMMA Dist. Dir.    = $(SRC)"
	@echo "  COPYHOST    Absolute Temp Arch Dist. Dir.     = $(COPYHOST)"
	@echo "  COPYBIN     Absolute Temp Binary Dist. Dir.   = $(COPYBIN)"
	@echo "  COPYLIB     Absolute Temp Library Dist. Dir.  = $(COPYLIB)"
	@echo "  COPYSRC     Absolute Temp Source Dist. Dir.   = $(COPYSRC)"
	@echo "  COPYTSUITE  Absolute Temp TestSuite Dist. Dir.= $(COPYTSUITE)"
	@echo "  COPYTST     Absolute Temp Test Dist. Dir.     = $(COPYTST)"
	@echo

pkgvars:
	@echo
	@echo "  Specified GAMMA Package Distribution Names"
	@echo
	@echo "  SRCNAME     Source Package Name               = $(SRCNAME)"
	@echo "  SRCTAR      Tarred Source Package Name        = $(SRCTAR)"
	@echo "  SRCZIP      Zipped Source Package Name        = $(SRCZIP)"
	@echo "  BINNAME     Binary Package Name               = $(BINNAME)"
	@echo "  BINTAR      Tarred Binary Package Name        = $(BINTAR)"
	@echo "  BINZIP      Zipped Binary Package Name        = $(BINZIP)"
	@echo
	@echo
	@echo "  Specified Module Build Flags"
	@echo
	@for i in $(SUBDIRS); do \
	  if [ -d ./src/$$i ] ; then \
             if (rootme=`pwd`/ ; export rootme ; \
               rootsrc=`cd $(srcdir); pwd`/ ; export rootsrc ; \
               cd ./src/$$i; \
               $(MAKE) --no-print-directory $(PASSFLGS) $@) ; then true ; \
             else exit 1 ; fi ; \
           else true; \
	  fi; \
	done

srcfiles:
	@echo
	@for i in $(SUBDIRS); do \
	  if [ -d ./src/$$i ] ; then \
             if (rootme=`pwd`/ ; export rootme ; \
               rootsrc=`cd $(srcdir); pwd`/ ; export rootsrc ; \
               cd ./src/$$i; \
               $(MAKE) --no-print-directory $(PASSFLGS) $@) ; then true ; \
             else exit 1 ; fi ; \
           else true; \
	  fi; \
	done
	@echo
	@echo "      Full Source File List In ${LABEL} Main Makefile"
	@echo
#	@echo "$(SRC)"

hdrfiles:
	@echo
	@for i in $(SUBDIRS); do \
	  if [ -d ./src/$$i ] ; then \
             if (rootme=`pwd`/ ; export rootme ; \
               rootsrc=`cd $(srcdir); pwd`/ ; export rootsrc ; \
               cd ./src/$$i; \
               $(MAKE) --no-print-directory $(PASSFLGS) $@) ; then true ; \
             else exit 1 ; fi ; \
           else true; \
	  fi; \
	done
	@echo
	@echo "      Full Header File List In ${LABEL} Main Makefile"
	@echo
#	@echo "$(HDR)"

objfiles:
	@echo
	@echo "$(OBJ)"
	@for i in $(SUBDIRS); do \
	  echo "Making $@ in ./src/$${i} ..." ; \
	  if [ -d ./src/$$i ] ; then \
             if (rootme=`pwd`/ ; export rootme ; \
               rootsrc=`cd $(srcdir); pwd`/ ; export rootsrc ; \
               cd ./src/$$i; \
               $(MAKE) --no-print-directory $(PASSFLGS) $@) ; then true ; \
             else exit 1 ; fi ; \
           else true; \
	  fi; \
	done
	@echo
	@echo "      Full Object File List In ${LABEL} Main Makefile"
	@echo
#	@echo "$(OBJ)"
